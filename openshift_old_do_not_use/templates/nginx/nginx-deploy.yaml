---
apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Deployment template for nginx
  name: nginx
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: 
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    replicas: 2
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: 
        labels:
          app: "${NAME}"
          deploymentconfig: "${NAME}"
      spec:
        containers:
        - image: "${SOURCE_NAME}"
          imagePullPolicy: Always
          name: "${NAME}"
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 250m
              memory: 200Mi
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_NAMESPACE}"
          name: "${SOURCE_NAME}-${TAG_NAME}:latest"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    host: "${HOSTNAME}"
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      terminationc: edge
    to:
      kind: Service
      name: "${NAME}"
      weight: 100
parameters:
- description: The name of the source image
  displayName: Source Name
  name: SOURCE_NAME
  required: true
  value: timemachine-web
- description: The name assigned to all of the openshift objects defined in this template.
    It is also the name of runtime image you want.
  displayName: Name
  name: NAME
  required: true
  value: timemachine-web
- description: The namespace where to get the above image name
  displayName: Image Namespace
  name: IMAGE_NAMESPACE
  required: true
  value: ed57f0-tools
- description: The TAG name for this environment, e.g., dev, test, prod
  displayName: Env TAG name
  name: TAG_NAME
  value: dev
- description: The public URL to access this deployment (incldue `apps.silver.devops.gov.bc.ca`)
  displayName: Env TAG name
  name: HOSTNAME
  value: timemachine-web-dev.apps.silver.devops.gov.bc.ca
